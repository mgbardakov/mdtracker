{"version":3,"sources":["./src/app/components/journal/record-form/record-form.component.ts","./src/app/components/journal/record-form/record-form.component.html","./src/app/components/settings/settings.component.html","./src/app/components/settings/settings.component.ts","./src/app/services/security/interceptors/token.interceptor.ts","./src/app/components/settings/device-crud/device-crud.component.ts","./src/app/components/settings/device-crud/device-crud.component.html","./src/app/components/register-device/selector-add-device/selector-add-device.component.ts","./src/app/components/register-device/selector-add-device/selector-add-device.component.html","./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/app/components/app.component.html","./src/app/components/app.component.ts","./src/environments/environment.ts","./src/app/components/app.module.ts","./src/app/services/device.service.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/confirm-dialog/confirm-dialog.component.ts","./src/app/components/confirm-dialog/confirm-dialog.component.html","./src/app/components/settings/device-crud/device-form/device-form.component.ts","./src/app/components/settings/device-crud/device-form/device-form.component.html","./src/app/components/settings/user-crud/user-add-form/user-add-form.component.ts","./src/app/components/settings/user-crud/user-add-form/user-add-form.component.html","./src/app/model/position.ts","./src/app/model/record.ts","./src/app/components/overview/overview.component.html","./src/app/components/overview/overview.component.ts","./src/app/services/security/auth-guard.service.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/settings/user-crud/user-crud.component.ts","./src/app/components/settings/user-crud/user-crud.component.html","./src/app/components/settings/position-crud/position-crud.component.ts","./src/app/components/settings/position-crud/position-crud.component.html","./src/app/components/material/material.module.ts","./src/app/model/device.ts","./src/app/services/position.service.ts","./src/app/model/user.ts","./src/app/services/register-device.service.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/settings/position-crud/position-form/position-form.component.ts","./src/app/components/settings/position-crud/position-form/position-form.component.html","./src/app/services/record.service.ts","./src/app/services/employee.service.ts","./src/app/services/user.service.ts","./src/app/components/register-device/qr-add-device/qr-add-device.component.ts","./src/app/components/register-device/qr-add-device/qr-add-device.component.html","./src/app/components/settings/user-crud/user-edit-form/user-edit-form.component.ts","./src/app/components/settings/user-crud/user-edit-form/user-edit-form.component.html","./src/app/services/security/role-guard.service.ts","./src/app/components/settings/device-crud/device-qr-printer/device-qr-table.component.ts","./src/app/components/settings/device-crud/device-qr-printer/device-qr-table.component.html","./src/app/components/register-device/register-device.component.ts","./src/app/components/register-device/register-device.component.html","./src/app/components/journal/journal.component.ts","./src/app/components/journal/journal.component.html","./src/main.ts","./src/app/services/security/auth.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogRef\r\n} from \"@angular/material/dialog\";\r\nimport {Employee} from \"../../../model/employee\";\r\nimport {Record} from \"../../../model/record\";\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Device} from \"../../../model/device\";\r\nimport {DeviceService} from \"../../../services/device.service\";\r\nimport {EmployeeService} from \"../../../services/employee.service\";\r\nimport {RecordService} from \"../../../services/record.service\";\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\nimport {ErrorComponent} from \"../../error/error.component\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ConfirmDialogComponent} from \"../../confirm-dialog/confirm-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-record-form',\r\n  templateUrl: './record-form.component.html',\r\n  styleUrls: ['./record-form.component.css']\r\n})\r\nexport class RecordFormComponent implements OnInit{\r\n\r\n  form: FormGroup;\r\n  deleteDisabled: boolean;\r\n  employees: Employee[];\r\n  devices: Device[];\r\n  submitDisabled: boolean;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<RecordFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Record,\r\n    private deviceService: DeviceService,\r\n    private employeeService: EmployeeService,\r\n    private recordService: RecordService,\r\n    private dialog: MatDialog) {}\r\n    filteredEmployees: Employee[];\r\n    filteredDevices: Device[];\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({taken: new FormControl(this.data == null || this.data.taken == null? '' : RecordFormComponent.toDateString(this.data.taken),\r\n        Validators.required),\r\n    employee: new FormControl(this.data == null || this.data.employee == null ? '' : this.data?.employee,\r\n      Validators.required),\r\n    device: new FormControl(this.data == null || this.data.device == null ? '' : this.data.device,\r\n      Validators.required),\r\n    returned: new FormControl(this.data == null || this.data.returned == null ? '' : RecordFormComponent.toDateString(this.data.returned))},\r\n      Validators.required);\r\n    this.employeeService.getAllEmployees().subscribe(employees => {\r\n      this.employees = employees;\r\n      this.filteredEmployees = employees;\r\n    })\r\n    this.deviceService.getAllDevices().subscribe(devices => {\r\n      this.devices = devices;\r\n      this.filteredDevices = devices;\r\n    })\r\n    this.submitDisabled = false;\r\n    this.deleteDisabled = false;\r\n\r\n  }\r\n\r\n  isSubmitDisabled() {\r\n    return this.form.invalid || this.submitDisabled;\r\n  }\r\n\r\n  createNewRecord(record: Record) {\r\n    this.submitDisabled = true;\r\n    this.recordService.createRecord(record).subscribe(record => {\r\n      this.dialogRef.close({status: 'created', record: record});\r\n    }, error => {\r\n       this.errorHandler(error);\r\n       this.submitDisabled = false;\r\n    })\r\n  }\r\n\r\n  updateRecord(record: Record) {\r\n    this.submitDisabled = true;\r\n    this.recordService.updateRecord(record).subscribe(() => {\r\n      this.dialogRef.close({status: 'update', record: record});\r\n    }, error => {\r\n      this.errorHandler(error);\r\n      this.submitDisabled = false;\r\n    })\r\n  }\r\n\r\n  removeRecord() {\r\n    this.confirm(\"Удалить выбранную запись?\").subscribe(flag => {\r\n      if (flag) {\r\n        this.deleteDisabled = true;\r\n        this.recordService.removeRecord(this.getRecord()).subscribe(() => {\r\n          this.dialogRef.close({status: 'remove', record: this.getRecord()});\r\n        }, error => {\r\n          this.errorHandler(error);\r\n          this.deleteDisabled = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close({status: 'canceled'});\r\n  }\r\n\r\n  submit() {\r\n    console.log(\"========FROM FORM SUBMIT METHOD========\")\r\n    console.log(this.form.controls['device'].value)\r\n    if (this.data === null) {\r\n      this.createNewRecord(this.getRecord())\r\n    } else {\r\n      this.updateRecord(this.getRecord())\r\n    }\r\n  }\r\n  private static toDateString(date: Date): string {\r\n    return (date.getFullYear().toString() + '-'\r\n      + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-'\r\n      + (\"0\" + (date.getDate())).slice(-2))\r\n      + 'T' + date.toTimeString().slice(0,5);\r\n  }\r\n\r\n  public objectComparisonFunction = function(option, value) : boolean {\r\n    return option.id == value.id\r\n  }\r\n\r\n\r\n  private getRecord(): Record {\r\n    let device = this.form.controls['device'].value;\r\n    device['verificationExpire'] = device['verificationExpire'] === 0 ? null : new Date(device['verificationExpire'])\r\n    return {\r\n      id: this.data === null ? 0 : this.data.id,\r\n      taken: new Date(this.form.controls['taken'].value),\r\n      device: device,\r\n      employee: this.form.controls['employee'].value,\r\n      returned: this.form.controls['returned'].value === \"\" ? null : new Date(this.form.controls['returned'].value)\r\n    }\r\n  }\r\n  confirm(message: String): Observable<boolean> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      data: message,\r\n      disableClose: true\r\n    }).afterClosed();\r\n  }\r\n\r\n\r\n  private errorHandler(error: HttpErrorResponse) {\r\n    switch (error.status) {\r\n      case 401: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Недостаточно прав\"}\r\n        });\r\n        break;\r\n      }\r\n      default: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Неизвестная ошибка\"}\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>{{data == null ? 'Новая запись' : 'Редактировать запись'}}</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <div mat-dialog-content fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-around\">\r\n    <div>\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n        <mat-label>Дата регистрации</mat-label>\r\n        <input matInput type=\"datetime-local\" autocomplete=\"off\" formControlName=\"taken\" required/>\r\n        <mat-error *ngIf=\"form.controls.taken.invalid\">Введите дату</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n        <mat-label>Сотрудник</mat-label>\r\n        <mat-select formControlName=\"employee\" [compareWith]=\"objectComparisonFunction\" required>\r\n          <mat-select-filter [placeholder]=\"'Поиск..'\"\r\n                             [noResultsMessage] = \"'Нет результатов'\"\r\n                             [array]=\"employees\"\r\n                             [displayMember]=\"'name'\"\r\n                             (filteredReturn)=\"filteredEmployees = $event\">\r\n          </mat-select-filter>\r\n          <mat-option *ngFor=\"let employee of filteredEmployees\" [value]=\"employee\">\r\n            {{employee.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"form.controls.employee.invalid\">Выберите сотрудника</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n        <mat-label>Прибор</mat-label>\r\n        <mat-select formControlName=\"device\" [compareWith]=\"objectComparisonFunction\" required>\r\n          <mat-select-filter [placeholder]=\"'Поиск..'\"\r\n                             [noResultsMessage] = \"'Нет результатов'\"\r\n                             [array]=\"devices\"\r\n                             [displayMember]=\"'name'\"\r\n                             (filteredReturn)=\"filteredDevices = $event\">\r\n          </mat-select-filter>\r\n          <mat-option *ngFor=\"let device of filteredDevices\" [value]=\"device\">\r\n            {{device.name}} {{device.serialNumber}}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"form.controls.device.invalid\">Выберите прибор</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n        <mat-label>Дата возврата прибора</mat-label>\r\n        <input matInput type=\"datetime-local\" autocomplete=\"off\" formControlName=\"returned\" required/>\r\n        <mat-error *ngIf=\"form.controls.returned.invalid\">Введите дату</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button mat-button type=\"button\" (click)=\"removeRecord()\" color=\"warn\" *ngIf=\"data !== null\" [disabled]=\"this.deleteDisabled\">Удалить</button>\r\n    <button mat-button type=\"button\" (click)=\"onNoClick()\">Отмена</button>\r\n    <button mat-button type=\"submit\" [disabled]=\"isSubmitDisabled()\">Ok</button>\r\n  </div>\r\n</form>\r\n\r\n","<h2>Настройки</h2>\r\n<mat-tab-group>\r\n  <mat-tab label=\"Сотрудники\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"5%\" fxLayout.xs=\"column\" style=\"padding-bottom: 30px\">\r\n      <app-employee-crud></app-employee-crud>\r\n      <app-position-crud></app-position-crud>\r\n    </div>\r\n  </mat-tab>\r\n  <mat-tab label=\"Приборы\">\r\n    <ng-template matTabContent>\r\n      <app-device-crud></app-device-crud>\r\n    </ng-template>\r\n  </mat-tab>\r\n  </mat-tab-group>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor, HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport {AuthService} from \"../auth.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(public auth: AuthService) {}\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.auth.isAuthenticated()) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${this.auth.getToken()}`\r\n        }\r\n      });\r\n    }\r\n    return next.handle(request).pipe(\r\n      catchError(error => {\r\n        if (error.status === 401) {\r\n          this.auth.logout();\r\n          return []\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\nimport {MatSort} from \"@angular/material/sort\";\r\nimport {MatTable, MatTableDataSource} from \"@angular/material/table\";\r\nimport {Device} from \"../../../model/device\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {DeviceFormComponent} from \"./device-form/device-form.component\";\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {DeviceQrTableComponent} from \"./device-qr-printer/device-qr-table.component\";\r\nimport {DeviceService} from \"../../../services/device.service\";\r\n\r\n@Component({\r\n  selector: 'app-device-crud',\r\n  templateUrl: './device-crud.component.html',\r\n  styleUrls: ['./device-crud.component.css']\r\n})\r\nexport class DeviceCrudComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(DeviceQrTableComponent) table: DeviceQrTableComponent\r\n  @ViewChild(MatTable) matTable: MatTable<any>\r\n  form: FormGroup\r\n  devices: Device[];\r\n  displayedColumns: string[] = ['index', 'name', 'serialNumber', 'verificationExpire'];\r\n  dataSource = new MatTableDataSource<Device>();\r\n  printableDevices: Device[];\r\n  filteredDevices: Device[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;}\r\n\r\n\r\n  constructor(public dialog: MatDialog,\r\n              private deviceService: DeviceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({devicesToPrint: new FormControl()})\r\n    this.deviceService.getAllDevices().subscribe(devices => {\r\n      this.devices = devices;\r\n      this.filteredDevices = devices;\r\n      this.dataSource.data = this.devices\r\n    })\r\n  }\r\n\r\n  openDialog(device: Device): MatDialogRef<any> {\r\n    return this.dialog.open(DeviceFormComponent, {\r\n      width: '700px',\r\n      data: device,\r\n      disableClose: true\r\n    });\r\n  }\r\n\r\n  createNewDevice() {\r\n    this.openDialog(null).afterClosed().subscribe(data => {\r\n      switch (data.status) {\r\n        case \"created\": {\r\n          this.devices.push(data.device)\r\n          this.dataSource.data = this.devices;\r\n          this.matTable.renderRows();\r\n          break;\r\n        }\r\n        case \"canceled\": {\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  updateOrDeleteDevice(device: Device) {\r\n    this.openDialog(device).afterClosed().subscribe(data => {\r\n      let index = this.devices.findIndex(x => x.id === device.id)\r\n      console.log(data)\r\n      switch (data.status) {\r\n        case 'updated': {\r\n          console.log('updated')\r\n          this.devices[index] = data.device;\r\n          break;\r\n        }\r\n        case 'removed': {\r\n          console.log('removed')\r\n          this.devices.splice(index, 1)\r\n          break;\r\n        }\r\n        case 'canceled': {\r\n          console.log('canceled')\r\n          break;\r\n        }\r\n      }\r\n      this.dataSource.data = this.devices\r\n      this.matTable.renderRows();\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    let devicePrintArray: Device[] = this.form.controls.devicesToPrint.value;\r\n    if (devicePrintArray !== null) {\r\n      this.printableDevices = [];\r\n      devicePrintArray.forEach(x => this.printableDevices.push(x))\r\n    } else {\r\n      this.printableDevices = this.devices\r\n    }\r\n    // console.log(JSON.stringify(this.printableDevices))\r\n    setTimeout(this.table.generatePDF, 1000)\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<h2>Приборы</h2>\r\n\r\n<div class=\"mat-elevation-z8 container\" fxLayout=\"column\" style=\"margin-bottom: 30px\">\r\n  <div style=\"overflow-x: auto\">\r\n    <table mat-table [dataSource]=\"dataSource\" style=\"width: 100%\" matSort>\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef><span style=\"margin-left: 20px\">№</span></th>\r\n        <td mat-cell *matCellDef=\"let device; let j = index\"><button mat-mini-fab style=\"margin-right: 1rem\" (click)=\"updateOrDeleteDevice(device)\"><mat-icon>edit</mat-icon></button> {{j + 1}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Название</th>\r\n        <td mat-cell *matCellDef=\"let device\"> {{device.name}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"serialNumber\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Серийный номер</th>\r\n        <td mat-cell *matCellDef=\"let device\"> {{device.serialNumber}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"verificationExpire\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Окончание срока поверки</th>\r\n        <td mat-cell *matCellDef=\"let device\"> {{device.verificationExpire | date: 'dd/MM/yyyy'}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <div style=\"text-align: center\"><button mat-mini-fab style=\"margin-top: 20px\" color=\"primary\" (click)=\"createNewDevice()\"><mat-icon>add</mat-icon></button></div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                   showFirstLastButtons\r\n                   aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start\" fxLayoutGap=\"5%\">\r\n      <div fxFlex=\"30%\">\r\n        <mat-label>Печать QR-кодов</mat-label>\r\n        <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n          <mat-select formControlName=\"devicesToPrint\" multiple>\r\n            <mat-select-filter [placeholder]=\"'Поиск..'\"\r\n                               [noResultsMessage] = \"'Нет результатов'\"\r\n                               [array]=\"devices\"\r\n                               [displayMember]=\"'name'\"\r\n                               (filteredReturn)=\"filteredDevices = $event\">\r\n            </mat-select-filter>\r\n            <mat-option *ngFor=\"let device of filteredDevices\" [value]=\"device\">\r\n              {{device.name}} №{{device.serialNumber}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"30%\">\r\n        <button mat-flat-button color=\"primary\" style=\"margin-top: 30px\" type=\"submit\">Распечатать</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n<app-device-qr-table [devices]=\"printableDevices\" style=\"display: none\"></app-device-qr-table>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {Device} from \"../../../model/device\";\r\nimport {Subject} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-selector-add-device',\r\n  templateUrl: './selector-add-device.component.html',\r\n  styleUrls: ['./selector-add-device.component.css']\r\n})\r\nexport class SelectorAddDeviceComponent implements OnInit {\r\n\r\n\r\n  deviceList: Device[];\r\n  @Input()\r\n  subject: Subject<Device[]>\r\n  @Output()\r\n  deviceEvent = new EventEmitter<Device[]>();\r\n  filteredDevices: Device[];\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.subject.subscribe(devices => {\r\n      console.log(devices)\r\n      this.deviceList = devices;\r\n      this.filteredDevices = devices;\r\n    })\r\n  }\r\n\r\n  devices = new FormControl();\r\n\r\n\r\n  addNewDevice() {\r\n    if (this.devices.value !== null) {\r\n      this.deviceEvent.emit(this.devices.value)\r\n    }\r\n\r\n  }\r\n}\r\n","<div>\r\n  <mat-card>\r\n    <form>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Приборы</mat-label>\r\n        <mat-select [formControl]=\"devices\" multiple>\r\n          <mat-select-trigger>\r\n            {{devices.value ? devices.value[0].name : ''}}\r\n            <span *ngIf=\"devices.value?.length > 1\" class=\"example-additional-selection\">\r\n        (+{{devices.value.length - 1}} {{devices.value?.length === 2 ? 'other' : 'others'}})\r\n      </span>\r\n          </mat-select-trigger>\r\n          <mat-select-filter [placeholder]=\"'Поиск..'\"\r\n                             [noResultsMessage] = \"'Нет результатов'\"\r\n                             [array]=\"deviceList\"\r\n                             [displayMember]=\"'name'\"\r\n                             (filteredReturn)=\"filteredDevices = $event\">\r\n          </mat-select-filter>\r\n          <mat-option *ngFor=\"let device of filteredDevices\" [value]=\"device\">{{device.name}} № {{device.serialNumber}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-card-actions >\r\n        <div><button mat-flat-button color=\"primary\" class=\"button\" type=\"button\" (click)=\"addNewDevice()\">Добавить</button></div>\r\n\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import {Component, Inject, Input, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {Record} from \"../../model/record\";\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  message: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ErrorComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = this.data.message;\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Ошибка!</h1>\r\n\r\n  <div mat-dialog-content>\r\n    {{message}}\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button mat-button mat-dialog-close>Ok</button>\r\n  </div>\r\n","<app-toolbar *ngIf=\"this.authService.isAuthenticated()\"></app-toolbar>\r\n<router-outlet></router-outlet>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../services/security/auth.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'angular';\r\n\r\n  constructor(public authService: AuthService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport const ROLE_NAMES = new Map();\r\nROLE_NAMES.set('ROLE_ADMIN', 'Администратор')\r\nROLE_NAMES.set('ROLE_USER', 'Пользователь')\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {InjectionToken, NgModule} from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MaterialModule } from './material/material.module'\r\nimport {ReactiveFormsModule} from \"@angular/forms\";\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { RegisterDeviceComponent } from './register-device/register-device.component';\r\nimport { SelectorAddDeviceComponent } from './register-device/selector-add-device/selector-add-device.component';\r\nimport { QrAddDeviceComponent } from './register-device/qr-add-device/qr-add-device.component';\r\nimport { JournalComponent } from './journal/journal.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport {FlexModule} from \"@angular/flex-layout\";\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { UserCrudComponent } from './settings/user-crud/user-crud.component';\r\nimport { PositionCrudComponent } from './settings/position-crud/position-crud.component';\r\nimport { DeviceCrudComponent } from './settings/device-crud/device-crud.component';\r\nimport { DeviceQrTableComponent } from './settings/device-crud/device-qr-printer/device-qr-table.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { RecordFormComponent } from './journal/record-form/record-form.component';\r\nimport { UserAddFormComponent } from './settings/user-crud/user-add-form/user-add-form.component';\r\nimport { UserEditFormComponent } from './settings/user-crud/user-edit-form/user-edit-form.component';\r\nimport { PositionFormComponent } from './settings/position-crud/position-form/position-form.component';\r\nimport { DeviceFormComponent } from './settings/device-crud/device-form/device-form.component';\r\nimport {QRCodeModule} from \"angular2-qrcode\";\r\nimport {ZXingScannerModule} from \"@zxing/ngx-scanner\";\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\r\nimport {CookieService} from \"ngx-cookie-service\";\r\nimport {AuthGuardService} from \"../services/security/auth-guard.service\";\r\nimport {RoleGuardService} from \"../services/security/role-guard.service\";\r\nimport {A} from \"@angular/cdk/keycodes\";\r\nimport {JWT_OPTIONS, JwtHelperService, JwtModule} from \"@auth0/angular-jwt\";\r\nimport {RecordService} from \"../services/record.service\";\r\nimport {TokenInterceptor} from \"../services/security/interceptors/token.interceptor\";\r\nimport {EmployeeService} from \"../services/employee.service\";\r\nimport {DeviceService} from \"../services/device.service\";\r\nimport { ErrorComponent } from './error/error.component';\r\nimport {PositionService} from \"../services/position.service\";\r\nimport {UserService} from \"../services/user.service\";\r\nimport {RegisterDeviceService} from \"../services/register-device.service\";\r\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\r\n\r\nconst appRoutes: Routes = [\r\n  {path: 'home', component: HomeComponent, canActivate: [AuthGuardService]},\r\n  {path: '', component: HomeComponent, canActivate: [AuthGuardService]},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register-devices', component: RegisterDeviceComponent, canActivate: [AuthGuardService]},\r\n  {path: 'journal', component: JournalComponent, canActivate: [AuthGuardService]},\r\n  {path: 'overview', component: OverviewComponent, canActivate: [RoleGuardService],\r\n    data: {expectedRole: 'ROLE_ADMIN'}},\r\n  {path: 'settings', component: SettingsComponent, canActivate: [RoleGuardService],\r\n    data: {expectedRole: 'ROLE_ADMIN'}}\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ToolbarComponent,\r\n    HomeComponent,\r\n    RegisterDeviceComponent,\r\n    SelectorAddDeviceComponent,\r\n    QrAddDeviceComponent,\r\n    JournalComponent,\r\n    OverviewComponent,\r\n    UserCrudComponent,\r\n    PositionCrudComponent,\r\n    DeviceCrudComponent,\r\n    DeviceQrTableComponent,\r\n    SettingsComponent,\r\n    RecordFormComponent,\r\n    UserAddFormComponent,\r\n    UserEditFormComponent,\r\n    PositionFormComponent,\r\n    DeviceFormComponent,\r\n    ErrorComponent,\r\n    ConfirmDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    NgbModule,\r\n    FlexModule,\r\n    QRCodeModule,\r\n    ZXingScannerModule,\r\n    HttpClientModule,\r\n    JwtModule\r\n  ],\r\n  providers: [CookieService,\r\n    AuthGuardService,\r\n    RoleGuardService,\r\n    JwtHelperService,\r\n    RecordService,\r\n    EmployeeService,\r\n    DeviceService,\r\n    PositionService,\r\n    UserService,\r\n    RegisterDeviceService,\r\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\r\n    {provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true}],\r\n      bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {Device} from \"../model/device\";\r\nimport {Record} from \"../model/record\";\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeviceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllDevices(): Observable<Device[]> {\r\n    return this.http.get<Device[]>('/api/v1/devices/')\r\n      .pipe(map(deviceJSONs => {\r\n        let devices = [];\r\n        deviceJSONs.forEach(deviceJSON => {\r\n          devices.push(this.mapJSONToDevice(deviceJSON))\r\n        })\r\n        return devices;\r\n      }));\r\n  }\r\n\r\n  createDevice(device: Device): Observable<Device> {\r\n    let deviceDTO = this.mapDeviceToJSON(device);\r\n    return this.http.post<Object>('/api/v1/devices/create',\r\n      deviceDTO, {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(deviceJSON => this.mapJSONToDevice(deviceJSON)));\r\n  }\r\n\r\n  updateDevice(device: Device): Observable<Device> {\r\n    let deviceDTO = this.mapDeviceToJSON(device);\r\n    return this.http.put('/api/v1/devices/update',\r\n      deviceDTO, {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(() => {\r\n        return device\r\n      }));\r\n  }\r\n\r\n  removeDevice(device: Device): Observable<Device> {\r\n    let deviceDTO = this.mapDeviceToJSON(device);\r\n    return this.http.post('/api/v1/devices/delete', deviceDTO,\r\n      {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(() => {\r\n        return device\r\n      }))\r\n  }\r\n\r\n  mapJSONToDevice(deviceJSON: Object): Device{\r\n    deviceJSON['verificationExpire'] = deviceJSON['verificationExpire'] === 0 ? null : new Date(deviceJSON['verificationExpire'])\r\n    let device = new Device();\r\n    Object.assign(device, deviceJSON)\r\n    return device\r\n  }\r\n\r\n  mapDeviceToJSON(device: Device): Object {\r\n    let deviceDTO = {};\r\n    Object.assign(deviceDTO, device)\r\n    deviceDTO['verificationExpire'] = device.verificationExpire === null ? null : device.verificationExpire.getTime()\r\n    return deviceDTO;\r\n  }\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {MatTable, MatTableDataSource} from \"@angular/material/table\";\r\nimport {RegisterDeviceService} from \"../../services/register-device.service\";\r\nimport {Record} from \"../../model/record\";\r\nimport {Observable} from \"rxjs\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {ConfirmDialogComponent} from \"../confirm-dialog/confirm-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  @ViewChild(MatTable) table: MatTable<any>\r\n  records: Record[] = [];\r\n  displayedColumns: string[] = ['id', 'name', 'serialNumber', 'deleteAction'];\r\n  dataSource = new MatTableDataSource();\r\n  constructor(private router: Router,\r\n              private registerDeviceService: RegisterDeviceService,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registerDeviceService.getAllActiveRecords().subscribe(records => {\r\n      this.records = records;\r\n      this.dataSource.data = this.records;\r\n    })\r\n  }\r\n\r\n  closeRecord(record: Record) {\r\n    this.confirm(\"Сдать прибор: \\\"\" + record.device.name + \"\\\"?\")\r\n      .subscribe(flag => {\r\n        if (flag) {\r\n          this.registerDeviceService.closeRecord(record).subscribe(() => {\r\n            let index = this.records.indexOf(record)\r\n            this.records.splice(index, 1)\r\n            this.dataSource.data = this.records;\r\n            this.table.renderRows();\r\n          })\r\n        }\r\n    })\r\n  }\r\n\r\n  closeAllRecords() {\r\n    this.confirm(\"Сдать все приборы?\")\r\n      .subscribe(flag => {\r\n        if (flag) {\r\n          this.registerDeviceService.closeAllRecords().subscribe(() => {\r\n            this.records = [];\r\n            this.dataSource.data = this.records;\r\n            this.table.renderRows()\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  confirm(message: String): Observable<boolean> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      data: message,\r\n      disableClose: true\r\n    }).afterClosed();\r\n  }\r\n\r\n  goToDevicePicker() {\r\n    this.router.navigate(['register-devices'])\r\n  }\r\n\r\n}\r\n","<h2>Список взятых приборов</h2>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 container\">\r\n\r\n  <ng-container matColumnDef=\"id\">\r\n    <th mat-header-cell *matHeaderCellDef> № </th>\r\n    <td mat-cell *matCellDef=\"let record; let index = index\"> {{index + 1}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"name\">\r\n    <th mat-header-cell *matHeaderCellDef> Название </th>\r\n    <td mat-cell *matCellDef=\"let record\"> {{record.device.name}} </td>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"serialNumber\">\r\n    <th mat-header-cell *matHeaderCellDef> Серийный номер </th>\r\n    <td mat-cell *matCellDef=\"let record\"> {{record.device.serialNumber}}</td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"deleteAction\">\r\n    <th mat-header-cell *matHeaderCellDef></th>\r\n    <td mat-cell *matCellDef=\"let record\"><button mat-mini-fab color=\"primary\" style=\"float: right\" (click)=\"closeRecord(record)\">\r\n      <mat-icon>remove</mat-icon>\r\n    </button></td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n<div class =\"container\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayout.xs=\"column\" fxLayoutGap=\"1rem\">\r\n  <button mat-raised-button color=\"primary\" style=\"float: left; width: 100%\" (click)=\"closeAllRecords()\" [disabled]=\"records.length === 0\">Сдать все приборы</button>\r\n  <button mat-raised-button color=\"primary\" style=\"float: right; width: 100%\" (click)=\"goToDevicePicker()\">Взять приборы</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\r\n  message: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data) { }\r\n\r\n  ngOnInit(): void {\r\n    this.message = this.data;\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close(false)\r\n  }\r\n\r\n  confirm() {\r\n    this.dialogRef.close(true)\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Предупрежение</h1>\r\n\r\n<div mat-dialog-content>\r\n  {{message}}\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"cancel()\">Отмена</button>\r\n  <button mat-button (click)=\"confirm()\">Подтвердить</button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogRef\r\n} from \"@angular/material/dialog\";\r\nimport {Device} from \"../../../../model/device\";\r\nimport {DeviceService} from \"../../../../services/device.service\";\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\nimport {ErrorComponent} from \"../../../error/error.component\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ConfirmDialogComponent} from \"../../../confirm-dialog/confirm-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-device-form',\r\n  templateUrl: './device-form.component.html',\r\n  styleUrls: ['./device-form.component.css']\r\n})\r\nexport class DeviceFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  submitDisabled: boolean;\r\n  deleteDisabled: boolean;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeviceFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Device,\r\n    private deviceService: DeviceService,\r\n    private dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(this.data == null ? '' : this.data.name, Validators.required),\r\n      serialNumber: new FormControl(this.data == null ? '' : this.data.serialNumber, Validators.required),\r\n      verificationExpire: new FormControl(this.data == null ? '' : DeviceFormComponent.toDateString(this.data.verificationExpire), Validators.required)\r\n    })\r\n    this.submitDisabled = false;\r\n    this.deleteDisabled = false;\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close({status: 'canceled'});\r\n  }\r\n\r\n  private static toDateString(date: Date): string {\r\n    return (date.getFullYear().toString() + '-'\r\n      + (\"0\" + (date.getMonth() + 1)).slice(-2) + '-'\r\n      + (\"0\" + (date.getDate())).slice(-2))\r\n  }\r\n\r\n  getDevice(): Device {\r\n    let verificationExpire = this.form.controls['verificationExpire'].value\r\n    verificationExpire = verificationExpire === 0 ? null : new Date(verificationExpire)\r\n    return {id: this.data == null ? 0 : this.data.id,\r\n            name: this.form.controls['name'].value,\r\n            serialNumber: this.form.controls['serialNumber'].value,\r\n            taken: this.data == null ? false : this.data.taken,\r\n            verificationExpire: verificationExpire}\r\n  }\r\n\r\n  createDevice() {\r\n    this.submitDisabled = true\r\n    this.deviceService.createDevice(this.getDevice()).subscribe(device => {\r\n      this.dialogRef.close({status: 'created', device: device})\r\n    }, error => {\r\n      this.errorHandler(error)\r\n      this.submitDisabled = false;\r\n    })\r\n  }\r\n\r\n  updateDevice() {\r\n    this.submitDisabled = true\r\n    this.deviceService.updateDevice(this.getDevice()).subscribe(() => {\r\n      this.dialogRef.close({status: 'updated', device: this.getDevice()})\r\n    }, error => {\r\n      this.errorHandler(error)\r\n      this.submitDisabled = false;\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    if (this.data === null) {\r\n      this.createDevice();\r\n    } else {\r\n      this.updateDevice();\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.confirm(\"Удалить выбранный прибор?\").subscribe(flag => {\r\n      if (flag) {\r\n        this.deleteDisabled = true;\r\n        this.deviceService.removeDevice(this.getDevice()).subscribe(() => {\r\n          this.dialogRef.close({status: 'removed', device: this.getDevice()})\r\n        }, error => {\r\n          this.errorHandler(error)\r\n          this.deleteDisabled = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  isSubmitDisabled() {\r\n    return this.form.invalid || this.submitDisabled;\r\n  }\r\n\r\n  confirm(message: String): Observable<boolean> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      data: message,\r\n      disableClose: true\r\n    }).afterClosed();\r\n  }\r\n\r\n  private errorHandler(error: HttpErrorResponse) {\r\n    switch (error.status) {\r\n      case 401: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Недостаточно прав\"}\r\n        });\r\n        break;\r\n      }\r\n      default: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Неизвестная ошибка\"}\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<h1 mat-dialog-title>{{data == null ? 'Новый прибор' : 'Редактировать прибор'}}</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <div mat-dialog-content fxLayout=\"row\" fxLayoutGap=\"5%\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-around\">\r\n    <div fxFlex=\"30%\">\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput type=\"text\" autocomplete=\"off\" formControlName=\"name\" required/>\r\n        <mat-error *ngIf=\"form.controls.name.invalid\">Введите название</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"30%\">\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n        <mat-label>Серийный номер</mat-label>\r\n        <input matInput type=\"text\" autocomplete=\"off\" formControlName=\"serialNumber\" required/>\r\n        <mat-error *ngIf=\"form.controls.serialNumber.invalid\">Введите серийный номер</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"30%\">\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n        <mat-label>Окончание срока поверки</mat-label>\r\n        <input matInput type=\"date\" autocomplete=\"off\" formControlName=\"verificationExpire\" required/>\r\n        <mat-error *ngIf=\"form.controls.verificationExpire.invalid\">Выберите дату окончания поверки</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button mat-button type=\"button\" (click)=\"remove()\" color=\"warn\" *ngIf=\"data !== null\" [disabled]=\"this.deleteDisabled\">Удалить</button>\r\n    <button mat-button type=\"button\" (click)=\"onNoClick()\">Отмена</button>\r\n    <button mat-button type=\"submit\" [disabled]=\"isSubmitDisabled()\">Ok</button>\r\n  </div>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogRef\r\n} from \"@angular/material/dialog\";\r\nimport {User} from \"../../../../model/user\";\r\nimport {Authority} from \"../../../../model/authority\";\r\nimport {Position} from \"../../../../model/position\";\r\nimport {UserService} from \"../../../../services/user.service\";\r\nimport {PositionService} from \"../../../../services/position.service\";\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\nimport {ErrorComponent} from \"../../../error/error.component\";\r\nimport {ROLE_NAMES} from \"../../../app.component\";\r\n\r\n@Component({\r\n  selector: 'app-user-add-form',\r\n  templateUrl: './user-add-form.component.html',\r\n  styleUrls: ['./user-add-form.component.css']\r\n})\r\nexport class UserAddFormComponent implements OnInit {\r\n\r\n  form: FormGroup\r\n  authorities: Authority[];\r\n  positions: Position[];\r\n  submitDisabled: boolean;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UserAddFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: User,\r\n    private userService: UserService,\r\n    private positionService: PositionService,\r\n    private dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({login: new FormControl('',\r\n                         [Validators.required, Validators.minLength(3)]),\r\n                                      password: new FormControl('',\r\n                         [Validators.required, Validators.minLength(6)]),\r\n                                      passwordConfirmation: new FormControl(),\r\n                                      authorities: new FormControl('', Validators.required),\r\n                                      name: new FormControl('',\r\n                         [Validators.required, Validators.minLength(3)]),\r\n                                      position: new FormControl('', Validators.required)\r\n                                      }, {validators: passwordMatchValidator} );\r\n    this.userService.getAllAuthorities().subscribe(authorities => {\r\n      this.authorities = authorities;\r\n    })\r\n    this.positionService.getAllPositions().subscribe(positions => {\r\n      this.positions = positions;\r\n    })\r\n  }\r\n\r\n  isSubmitDisabled() {\r\n    return this.form.invalid || this.submitDisabled;\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close({status: 'canceled'});\r\n  }\r\n\r\n  private getUser(): User {\r\n    return {id: 0, authorities: [this.form.controls['authorities'].value],\r\n            login: this.form.controls['login'].value,\r\n            password: this.form.controls['password'].value,\r\n            employee: {id: 0, name: this.form.controls['name'].value,\r\n                       position: this.form.controls['position'].value}}\r\n  }\r\n\r\n  submit() {\r\n    this.submitDisabled = true;\r\n    this.userService.createUser(this.getUser()).subscribe(user => {\r\n      this.dialogRef.close({status: 'created', user: user});\r\n    }, error => {\r\n      this.errorHandler(error);\r\n      this.submitDisabled = false;\r\n    })\r\n  }\r\n\r\n  private errorHandler(error: HttpErrorResponse) {\r\n    switch (error.status) {\r\n      case 401: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Недостаточно прав\"}\r\n        });\r\n        break;\r\n      }\r\n      case 406: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Выбранный логин занят\"}\r\n        });\r\n        break;\r\n      }\r\n      default: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Неизвестная ошибка\"}\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getRoleName(name: string): string {\r\n    return ROLE_NAMES.get(name)\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport const passwordMatchValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n  const password = control.get('password');\r\n  const passwordConfirmation = control.get('passwordConfirmation');\r\n  if (password && passwordConfirmation && password.value !== passwordConfirmation.value) {\r\n    passwordConfirmation.setErrors({passwordNotMatch: true})\r\n  } else {\r\n    passwordConfirmation.setErrors(null)\r\n  }\r\n  return null;\r\n};\r\n","<h1 mat-dialog-title style=\"text-align: center\">Новый пользователь</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <div mat-dialog-content fxLayout=\"column\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around\" fxLayoutGap.xs=\"5%\" fxLayout.xs=\"column\">\r\n      <div fxFlex=\"30%\">\r\n        <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n          <mat-label>Login</mat-label>\r\n          <input matInput type=\"text\" autocomplete=\"off\" formControlName=\"login\" required/>\r\n          <mat-error *ngIf=\"form.controls.login.errors?.required\">Введите логин</mat-error>\r\n          <mat-error *ngIf=\"form.controls.login.errors?.minlength\">Не менее 3 символов</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"30%\">\r\n        <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n          <mat-label>Пароль</mat-label>\r\n          <input matInput type=\"password\" autocomplete=\"off\" formControlName=\"password\" required/>\r\n          <mat-error *ngIf=\"form.controls.password.errors?.required\">Введите пароль</mat-error>\r\n          <mat-error *ngIf=\"form.controls.password.errors?.minlength\">Не менее 6 символов</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around\" fxLayoutGap.xs=\"5%\" fxLayout.xs=\"column\">\r\n      <div fxFlex=\"30%\" fxFlexOrder.xs=\"2\">\r\n        <mat-label>Роль</mat-label>\r\n        <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n          <mat-select formControlName=\"authorities\" required>\r\n            <mat-option *ngFor=\"let authority of authorities\" [value]=\"authority\">\r\n              {{getRoleName(authority.role)}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"form.controls.authorities.invalid\">Выберите роль</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"30%\" fxFlexOrder.xs=\"1\">\r\n        <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n          <mat-label>Повторите пароль</mat-label>\r\n          <input matInput type=\"password\" autocomplete=\"off\" formControlName=\"passwordConfirmation\"/>\r\n          <mat-error *ngIf=\"form.controls.passwordConfirmation.errors?.passwordNotMatch\">Пароли не совпадают</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around\" fxLayoutGap.xs=\"5%\" fxLayout.xs=\"column\">\r\n      <div fxFlex=\"30%\">\r\n        <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n          <mat-label>Ф.И.О.</mat-label>\r\n          <input matInput type=\"text\" autocomplete=\"off\" formControlName=\"name\" required/>\r\n          <mat-error *ngIf=\"form.controls.name.errors?.required\">Введите имя</mat-error>\r\n          <mat-error *ngIf=\"form.controls.name.errors?.minlength\">Не менее 3 символов</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"30%\">\r\n        <mat-label>Должность</mat-label>\r\n        <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n          <mat-select formControlName=\"position\" required>\r\n            <mat-option *ngFor=\"let position of positions\" [value]=\"position\">\r\n              {{position.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"form.controls.position.invalid\">Выберите должность</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around\" fxLayoutGap.xs=\"5%\" fxLayout.xs=\"column\">\r\n\r\n    </div>\r\n  <div mat-dialog-actions fxLayoutAlign=\"end\" style=\"margin-bottom: 10px\">\r\n    <button mat-button type=\"button\" (click)=\"onNoClick()\">Отмена</button>\r\n    <button mat-button type=\"submit\" [disabled]=\"isSubmitDisabled()\">Ok</button>\r\n  </div>\r\n  </div>\r\n</form>\r\n\r\n\r\n\r\n\r\n","import {Field, Model} from \"serialize-ts\";\r\n\r\n\r\nexport class Position {\r\n\r\n  id: number;\r\n\r\n  name: string;\r\n}\r\n","import {Employee} from \"./employee\";\r\nimport {Device} from \"./device\";\r\n\r\n\r\n\r\nexport class Record {\r\n\r\n  id: number;\r\n\r\n  taken: Date;\r\n\r\n  returned: Date;\r\n\r\n  employee: Employee;\r\n\r\n  device: Device;\r\n}\r\n","<h1>Оперативная обстановка</h1>\r\n<div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"space-around\">\r\n  <div class=\"card\" *ngFor=\"let pair of employeeDevices | keyvalue\">\r\n    <div class=\"card-header\"><h2>{{pair.value[0].employee.name}}, {{pair.value[0].employee.position.name}}</h2></div>\r\n  <div class=\"card-body\">\r\n    <table class=\"table-bordered\">\r\n      <tr>\r\n        <th class=\"mat-header-cell\">№</th>\r\n        <th class=\"mat-header-cell\">Название</th>\r\n        <th class=\"mat-header-cell\">Серийный номер</th>\r\n        <th class=\"mat-header-cell\">Взят</th>\r\n      </tr>\r\n      <tr *ngFor=\"let record of pair.value; let index = index\">\r\n        <td class=\"mat-cell\">{{index + 1}}</td>\r\n        <td class=\"mat-cell\">{{record.device.name}}</td>\r\n        <td class=\"mat-cell\">{{record.device.serialNumber}}</td>\r\n        <td class=\"mat-cell\">{{record.taken | date: \"dd.MM.YY/ HH:mm\" }}</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Employee} from \"../../model/employee\";\r\nimport {Record} from \"../../model/record\";\r\nimport {RecordService} from \"../../services/record.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.component.html',\r\n  styleUrls: ['./overview.component.css']\r\n})\r\nexport class OverviewComponent implements OnInit {\r\n\r\n  records: Record[];\r\n\r\n  employeeDevices: Map<Number, Record[]> = new Map<Number, Record[]>();\r\n\r\n  constructor(private recordService: RecordService) { }\r\n\r\n  public convertRecordsToMap(records) {\r\n    let rslMap: Map<Number, Record[]> = new Map<Number, Record[]>();\r\n    records.forEach(record => {\r\n      if (rslMap.has(record.employee.id)) {\r\n        rslMap.get(record.employee.id).push(record);\r\n      } else {\r\n        rslMap.set(record.employee.id, [record])\r\n      }\r\n    })\r\n    return rslMap\r\n  }\r\n\r\n  ngOnInit(): void {\r\n     this.recordService.getActiveRecords().subscribe(records => {\r\n       this.records = records;\r\n       this.employeeDevices = this.convertRecordsToMap(records)\r\n     })\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: AuthService, public router: Router) {}\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {AuthService} from \"../../services/security/auth.service\";\r\nimport {User} from \"../../model/user\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  form: FormGroup;\r\n  errorMessage: String = \"\"\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({login: new FormControl(),\r\n    password: new FormControl()});\r\n    this.authService.errorStream.subscribe(errMsg => {\r\n      this.errorMessage = errMsg;\r\n    })\r\n  }\r\n\r\n  login() {\r\n    this.authService.authorize(this.getUser())\r\n  }\r\n\r\n  getUser(): User {\r\n    return {id: null, login: this.form.controls.login.value,\r\n      employee: null, password: this.form.controls.password.value,\r\n      authorities: null\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //this.authService.errorStream.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2 style=\"text-align: center\">MDTracker</h2>\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"login()\">\r\n    <div style=\"color: #ff0000; text-align: center\">{{errorMessage}}</div>\r\n    <div>\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n        <mat-label>Login</mat-label>\r\n        <input matInput type=\"text\" autocomplete=\"off\" formControlName=\"login\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n        <mat-label>Пароль</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\"/>\r\n      </mat-form-field>\r\n    </div>\r\n    <div style=\"float: right\">\r\n      <button mat-raised-button color=\"primary\" type=\"submit\">Войти</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\nimport {MatSort} from \"@angular/material/sort\";\r\nimport {Employee} from \"../../../model/employee\";\r\nimport {MatTable, MatTableDataSource} from \"@angular/material/table\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {User} from \"../../../model/user\";\r\nimport {UserAddFormComponent} from \"./user-add-form/user-add-form.component\";\r\nimport {UserEditFormComponent} from \"./user-edit-form/user-edit-form.component\";\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {ROLE_NAMES} from \"../../app.component\";\r\n\r\n@Component({\r\n  selector: 'app-employee-crud',\r\n  templateUrl: './user-crud.component.html',\r\n  styleUrls: ['./user-crud.component.css']\r\n})\r\nexport class UserCrudComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(MatTable) table: MatTable<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  users: User[];\r\n  displayedColumns: string[] = ['index', 'name', 'position', 'role'];\r\n  dataSource = new MatTableDataSource<User>();\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n     this.dataSource.sortingDataAccessor = (user, property) => {\r\n       switch(property) {\r\n         case 'position': return user.employee.position.name;\r\n         case 'role': return user.authorities[0].role;\r\n         case 'name': return user.employee.name;\r\n         default: return user[property];\r\n       }\r\n     };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  constructor(public dialog: MatDialog, private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAllUsers().subscribe(users => {\r\n      this.users = users;\r\n      this.dataSource.data = users;\r\n    })\r\n  }\r\n\r\n  openAddingDialog(): void {\r\n    this.dialog.open(UserAddFormComponent, {\r\n      disableClose: true\r\n    }).afterClosed().subscribe(data => {\r\n      switch (data.status) {\r\n        case 'created': {\r\n          console.log('created')\r\n          this.users.push(data.user)\r\n          this.dataSource.data = this.users;\r\n          this.table.renderRows();\r\n          break;\r\n        }\r\n        case 'canceled': {\r\n          console.log('canceled')\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openEditingDialog(user: User): void {\r\n    this.dialog.open(UserEditFormComponent, {\r\n      data: user,\r\n      disableClose: true\r\n    }).afterClosed().subscribe(data => {\r\n      let index = this.users.findIndex(x => x.id === user.id)\r\n      switch (data.status) {\r\n        case 'updated': {\r\n          this.users[index] = data.user;\r\n          break;\r\n        }\r\n        case 'removed': {\r\n          this.users.splice(index, 1)\r\n          break;\r\n        }\r\n        case 'canceled': {\r\n          break;\r\n        }\r\n      }\r\n      this.dataSource.data = this.users\r\n      this.table.renderRows();\r\n    });\r\n  }\r\n\r\n  getRoleName(key: String) {\r\n    return ROLE_NAMES.get(key)\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","<h2>Пользователи</h2>\r\n\r\n<div class=\"mat-elevation-z8 container\" fxLayout=\"column\">\r\n  <div style=\"overflow-x: auto\">\r\n    <table mat-table [dataSource]=\"dataSource\" style=\"width: 100%\" matSort>\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef><span style=\"margin-left: 20px\">№</span></th>\r\n        <td mat-cell *matCellDef=\"let user; let j = index\"><button mat-mini-fab style=\"margin-right: 1rem\" (click)=\"openEditingDialog(user)\"><mat-icon>edit</mat-icon></button> {{j + 1}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Имя </th>\r\n        <td mat-cell *matCellDef=\"let user\"> {{user.employee.name}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"position\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Должность</th>\r\n        <td mat-cell *matCellDef=\"let user\"> {{user.employee.position.name}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"role\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Роль</th>\r\n        <td mat-cell *matCellDef=\"let user\"> {{getRoleName(user.authorities[0].role)}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <div style=\"text-align: center\"><button mat-mini-fab style=\"margin-top: 20px\" color=\"primary\" (click)=\"openAddingDialog()\"><mat-icon>add</mat-icon></button></div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                   showFirstLastButtons\r\n                   aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>\r\n</div>\r\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\nimport {MatSort} from \"@angular/material/sort\";\r\nimport {MatTable, MatTableDataSource} from \"@angular/material/table\";\r\nimport {Position} from \"../../../model/position\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {PositionFormComponent} from \"./position-form/position-form.component\";\r\nimport {PositionService} from \"../../../services/position.service\";\r\nimport {RecordFormComponent} from \"../../journal/record-form/record-form.component\";\r\nimport {Record} from \"../../../model/record\";\r\n\r\n@Component({\r\n  selector: 'app-position-crud',\r\n  templateUrl: './position-crud.component.html',\r\n  styleUrls: ['./position-crud.component.css']\r\n})\r\nexport class PositionCrudComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(MatTable) table: MatTable<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  positions: Position[];\r\n  displayedColumns: string[] = ['index', 'name'];\r\n  dataSource = new MatTableDataSource<Position>();\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n\r\n\r\n  constructor(public dialog: MatDialog, private positionService: PositionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.positionService.getAllPositions().subscribe(positions => {\r\n      this.positions = positions;\r\n      this.dataSource.data = this.positions;\r\n    })\r\n  }\r\n\r\n  openDialog(position: Position): MatDialogRef<PositionFormComponent> {\r\n    return this.dialog.open(PositionFormComponent, {\r\n      width: '300px',\r\n      data: position,\r\n      disableClose: true\r\n    });\r\n  }\r\n\r\n  createPosition() {\r\n    this.openDialog(null).afterClosed().subscribe(data => {\r\n      switch (data.status) {\r\n        case 'created': {\r\n          this.positions.push(data.position)\r\n          this.dataSource.data = this.positions;\r\n          this.table.renderRows();\r\n          break\r\n        }\r\n        case 'canceled': {\r\n          break;\r\n        }\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  updatePosition(position: Position) {\r\n    this.openDialog(position).afterClosed().subscribe(data => {\r\n      let index = this.positions.findIndex(x => x.id === position.id)\r\n      console.log(data)\r\n      switch (data.status) {\r\n        case 'update': {\r\n          console.log('updated')\r\n          this.positions[index] = data.position;\r\n          break;\r\n        }\r\n        case 'remove': {\r\n          console.log('removed')\r\n          this.positions.splice(index, 1)\r\n          break;\r\n        }\r\n        case 'canceled': {\r\n          console.log('canceled')\r\n          break;\r\n        }\r\n      }\r\n      this.dataSource.data = this.positions\r\n      this.table.renderRows();\r\n    })\r\n  }\r\n\r\n}\r\n","<h2>Список должностей</h2>\r\n\r\n<div class=\"mat-elevation-z8 container\" fxLayout=\"column\">\r\n  <div style=\"overflow-x: auto\">\r\n    <table mat-table [dataSource]=\"dataSource\" style=\"width: 100%\" matSort>\r\n      <ng-container matColumnDef=\"index\">\r\n        <th mat-header-cell *matHeaderCellDef><span style=\"margin-left: 20px\">№</span></th>\r\n        <td mat-cell *matCellDef=\"let position; let j = index\"><button mat-mini-fab style=\"margin-right: 1rem\" (click)=\"updatePosition(position)\"><mat-icon>edit</mat-icon></button> {{j + 1}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"name\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Название должности</th>\r\n        <td mat-cell *matCellDef=\"let position\"> {{position.name}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <div style=\"text-align: center\"><button mat-mini-fab style=\"margin-top: 20px\" color=\"primary\" (click)=\"createPosition()\"><mat-icon>add</mat-icon></button></div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                   showFirstLastButtons\r\n                   aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core'\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatMenuModule} from \"@angular/material/menu\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatTableModule} from \"@angular/material/table\";\r\nimport {MatCardModule} from \"@angular/material/card\";\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\r\nimport {MatNativeDateModule} from \"@angular/material/core\";\r\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\r\nimport {MatSortModule} from \"@angular/material/sort\";\r\nimport {MatGridListModule} from \"@angular/material/grid-list\";\r\nimport {MatTabsModule} from \"@angular/material/tabs\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatSelectFilterModule} from \"mat-select-filter\";\r\n\r\n\r\nconst MaterialComponents = [\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatTableModule,\r\n  MatCardModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatGridListModule,\r\n  MatTabsModule,\r\n  MatDialogModule,\r\n  MatSelectFilterModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [MaterialComponents],\r\n  exports: [MaterialComponents]\r\n})\r\nexport class MaterialModule { }\r\n","\r\n\r\n\r\nexport class Device {\r\n\r\n  id: number;\r\n\r\n  name: string;\r\n\r\n  verificationExpire: Date;\r\n\r\n  taken: boolean;\r\n\r\n  serialNumber: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {Position} from \"../model/position\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PositionService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllPositions(): Observable<Position[]> {\r\n    return this.http.get<Position[]>('/api/v1/positions/');\r\n  }\r\n\r\n  createPosition(position: Position): Observable<Position> {\r\n    return this.http.post<Position>('/api/v1/positions/create',\r\n      position, {headers: {'Content-Type': 'application/json'}});\r\n  }\r\n\r\n  updatePosition(position: Position): Observable<Position> {\r\n    return this.http.put('/api/v1/positions/update',\r\n      position, {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(() => {\r\n        return position\r\n      }));\r\n  }\r\n\r\n  removePosition(position: Position): Observable<Position> {\r\n    return this.http.post('/api/v1/positions/delete', position,\r\n      {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(() => {\r\n        return position\r\n      }))\r\n  }\r\n\r\n}\r\n","import {Employee} from \"./employee\";\r\nimport {Authority} from \"./authority\";\r\n\r\n\r\n\r\nexport class User {\r\n\r\n  id: number;\r\n\r\n  login: string;\r\n\r\n  password: string;\r\n\r\n  employee: Employee;\r\n\r\n  authorities: Authority[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {DeviceService} from \"./device.service\";\r\nimport {Device} from \"../model/device\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {RecordService} from \"./record.service\";\r\nimport {Record} from \"../model/record\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterDeviceService {\r\n\r\n  constructor(private deviceService: DeviceService,\r\n              private recordService: RecordService,\r\n              private http: HttpClient) { }\r\n\r\n  registerDevices(devices: Device[]) {\r\n    let deviceDTOs = devices.map(x => this.deviceService.mapDeviceToJSON(x));\r\n    return this.http.post('/api/v1/register/', deviceDTOs);\r\n  }\r\n\r\n  closeRecord(record: Record): Observable<Record> {\r\n    let recordDTO = this.recordService.mapRecordToJSON(record);\r\n    return this.http.put('/api/v1/register/close', recordDTO)\r\n      .pipe(map(recordDTO => this.recordService.mapJSONToRecord(recordDTO)));\r\n  }\r\n\r\n  closeAllRecords() {\r\n    return this.http.put('/api/v1/register/close-all', {})\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  getAllActiveRecords(): Observable<Record[]> {\r\n    return this.http.get<Object[]>('/api/v1/register/active-records')\r\n      .pipe(map(recordDTOs => {\r\n        let records = [];\r\n        recordDTOs.forEach(recordDTO => records.push(this.recordService.mapJSONToRecord(recordDTO)));\r\n        return records;\r\n      }))\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <span style=\"padding-right: 10px\">\r\n  <mat-menu #appMenu = \"matMenu\">\r\n    <button mat-menu-item routerLink=\"home\"><a>Главная</a></button>\r\n    <button mat-menu-item routerLink=\"journal\">Журнал</button>\r\n    <button mat-menu-item routerLink=\"overview\" *ngIf=\"authService.isAdmin()\">Обзор</button>\r\n    <button mat-menu-item routerLink=\"settings\" *ngIf=\"authService.isAdmin()\">Настройки</button>\r\n  </mat-menu>\r\n  <button mat-mini-fab [mat-menu-trigger-for]=\"appMenu\" color=\"white\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  </span>\r\n  <span>MDTracker</span>\r\n  <span class=\"example-spacer\"></span>\r\n  <div style=\"padding-right: 1rem; margin-left: 1rem; font-size: medium; max-width: 200px\">\r\n    {{getName()}}\r\n  </div>\r\n  <button mat-flat-button (click)=\"authService.logout()\">\r\n    Выйти\r\n  </button>\r\n\r\n\r\n</mat-toolbar>\r\n","import {Component, OnChanges, OnDestroy, OnInit} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"../../services/security/auth.service\";\r\nimport {addModuleImportToModule} from \"@angular/cdk/schematics\";\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit, OnDestroy {\r\n\r\n  userName: String;\r\n  router: Router;\r\n\r\n  constructor(router: Router, public authService: AuthService) {\r\n    this.router = router;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.eventStream.subscribe(employee => {\r\n      this.userName = employee?.name;\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //this.authService.eventStream.unsubscribe();\r\n  }\r\n\r\n  getName(): string {\r\n    let name = JSON.parse(localStorage.getItem('employee')).name;\r\n    let lastName = name.split(\" \")[0] + \" \"\r\n    let firstName = name.split(\" \")[1] === undefined ? \"\" : name.split(\" \")[1][0] + \". \"\r\n    let middleName = name.split(\" \")[2] === undefined ? \"\" : name.split(\" \")[2][0] + \".\"\r\n    return lastName + firstName + middleName\r\n  }\r\n\r\n\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogRef\r\n} from \"@angular/material/dialog\";\r\nimport {Record} from \"../../../../model/record\";\r\nimport {Employee} from \"../../../../model/employee\";\r\nimport {Device} from \"../../../../model/device\";\r\nimport {Position} from \"../../../../model/position\";\r\nimport {RecordFormComponent} from \"../../../journal/record-form/record-form.component\";\r\nimport {PositionService} from \"../../../../services/position.service\";\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\nimport {ErrorComponent} from \"../../../error/error.component\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ConfirmDialogComponent} from \"../../../confirm-dialog/confirm-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-position-form',\r\n  templateUrl: './position-form.component.html',\r\n  styleUrls: ['./position-form.component.css']\r\n})\r\nexport class PositionFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  submitDisabled: boolean;\r\n  deleteDisabled: boolean;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PositionFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Position,\r\n    private positionService: PositionService,\r\n    private dialog: MatDialog) {}\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({name: new FormControl(this.data == null ? '' : this.data.name,\r\n        Validators.required)})\r\n    this.submitDisabled = false;\r\n    this.deleteDisabled = false;\r\n  }\r\n\r\n  isSubmitDisabled() {\r\n    return this.form.invalid || this.submitDisabled;\r\n  }\r\n\r\n  createNewPosition(position: Position) {\r\n    this.submitDisabled = true;\r\n    this.positionService.createPosition(position).subscribe(position => {\r\n      this.dialogRef.close({status: 'created', position: position});\r\n    }, error => {\r\n      this.errorHandler(error);\r\n      this.submitDisabled = false;\r\n    })\r\n  }\r\n\r\n  updatePosition(position: Position) {\r\n    this.submitDisabled = true;\r\n    this.positionService.updatePosition(position).subscribe(() => {\r\n      this.dialogRef.close({status: 'update', position: position});\r\n      console.log('we ar in update method')\r\n    }, error => {\r\n      this.errorHandler(error);\r\n      this.submitDisabled = false;\r\n    })\r\n  }\r\n\r\n  removePosition() {\r\n    this.confirm(\"Удалить должность?\").subscribe(flag => {\r\n      if (flag) {\r\n        this.deleteDisabled = true;\r\n        this.positionService.removePosition(this.getPosition()).subscribe(() => {\r\n          this.dialogRef.close({status: 'remove', position: this.getPosition()});\r\n        }, error => {\r\n          this.errorHandler(error);\r\n          this.deleteDisabled = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  onNoClick(): void {\r\n    console.log('no click')\r\n    this.dialogRef.close({status: 'canceled'});\r\n  }\r\n\r\n  getPosition(): Position {\r\n    return {id: this.data == null ? 0 : this.data.id,\r\n            name: this.form.controls['name'].value}\r\n  }\r\n\r\n  submit() {\r\n    console.log('we are in submit')\r\n    if (this.data === null) {\r\n      this.createNewPosition(this.getPosition())\r\n    } else {\r\n      this.updatePosition(this.getPosition())\r\n    }\r\n  }\r\n\r\n  confirm(message: String): Observable<boolean> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      data: message,\r\n      disableClose: true\r\n    }).afterClosed();\r\n  }\r\n\r\n  private errorHandler(error: HttpErrorResponse) {\r\n    switch (error.status) {\r\n      case 401: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Недостаточно прав\"}\r\n        });\r\n        break;\r\n      }\r\n      default: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Неизвестная ошибка\"}\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<h1 mat-dialog-title>{{data == null ? 'Новая должность' : 'Редактировать должность'}}</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <div mat-dialog-content fxLayout=\"row\" fxLayoutGap=\"5%\">\r\n    <div fxFlex=\"100%\">\r\n      <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n        <mat-label>Название</mat-label>\r\n        <input matInput type=\"text\" autocomplete=\"off\" formControlName=\"name\" required/>\r\n        <mat-error *ngIf=\"form.controls.name.invalid\">Введите название</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button mat-button type=\"button\" (click)=\"removePosition()\" color=\"warn\" *ngIf=\"data !== null\" [disabled]=\"this.deleteDisabled\">Удалить</button>\r\n    <button mat-button type=\"button\" (click)=\"onNoClick()\">Отмена</button>\r\n    <button mat-button type=\"submit\" [disabled]=\"isSubmitDisabled()\">Ok</button>\r\n  </div>\r\n</form>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Record} from \"../model/record\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {environment} from \"../../environments/environment\";\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecordService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllRecords(): Observable<Record[]> {\r\n    return this.http.get<Object[]>('/api/v1/records/')\r\n      .pipe(map(recordJSONs => {\r\n        let records = []\r\n        recordJSONs.forEach(recordJSON => {\r\n          records.push(this.mapJSONToRecord(recordJSON))\r\n        })\r\n        return records;\r\n      }));\r\n  }\r\n\r\n  createRecord(record: Record): Observable<Record> {\r\n    let recordDTO = this.mapRecordToJSON(record);\r\n    return this.http.post<Object>('/api/v1/records/create', recordDTO, {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(recordJSON => {\r\n        return this.mapJSONToRecord(recordJSON)\r\n      }));\r\n  }\r\n\r\n  updateRecord(record: Record): Observable<Record> {\r\n    let recordDTO = this.mapRecordToJSON(record);\r\n    return this.http.put('/api/v1/records/update', recordDTO, {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(() => {\r\n        console.log(record)\r\n        return record\r\n      }));\r\n  }\r\n\r\n  removeRecord(record: Record): Observable<Record> {\r\n    console.log(record);\r\n    let recordDTO = this.mapRecordToJSON(record);\r\n    return this.http.post('/api/v1/records/delete', recordDTO, {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(() => {\r\n        return record\r\n      }))\r\n  }\r\n\r\n  getRecordsByRequest(request: any): Observable<Record[]> {\r\n    let params = new HttpParams().set('startDate', request.startDate)\r\n      .append('endDate', request.endDate)\r\n      .append('employeeId', request.employee?.id)\r\n      .append('deviceId', request.device?.id)\r\n    return this.http.get<Object[]>('/api/v1/records/filter', {params: params})\r\n      .pipe(map(recordDTOs => {\r\n        let records = []\r\n        recordDTOs.forEach(recordDTO => {\r\n          records.push(this.mapJSONToRecord(recordDTO))\r\n        })\r\n        return records;\r\n      }))\r\n  }\r\n\r\n  getEmployeesAndDevices(): Observable<Object> {\r\n    return this.http.get<Map<String, Object[]>>('/api/v1/records/employees-and-devices');\r\n\r\n  }\r\n\r\n  getActiveRecords(): Observable<Record[]> {\r\n    return this.http.get<Object[]>('/api/v1/records/active')\r\n      .pipe(map(recordJSONs => {\r\n        let records = [];\r\n        recordJSONs.forEach(recordJSON => {\r\n          records.push(this.mapJSONToRecord(recordJSON))\r\n        })\r\n        return records\r\n      }));\r\n  }\r\n\r\n\r\n  mapJSONToRecord(recordJSON: Object): Record{\r\n    recordJSON['taken'] = recordJSON['taken'] === 0 ? null : new Date(recordJSON['taken'])\r\n    recordJSON['returned'] = recordJSON['returned'] === 0 ? null : new Date(recordJSON['returned'])\r\n    recordJSON['device']['verificationExpire'] = recordJSON['device']['verificationExpire'] === 0 ? null : new Date(recordJSON['device']['verificationExpire'])\r\n    let record = new Record();\r\n    Object.assign(record, recordJSON)\r\n    return record\r\n  }\r\n\r\n  mapRecordToJSON(record: Record): Object {\r\n    let recordDTO = {};\r\n    Object.assign(recordDTO, record)\r\n    recordDTO['taken'] = record.taken.getTime()\r\n    recordDTO['returned'] = record.returned === null ? 0 : record.returned.getTime()\r\n    recordDTO['device']['verificationExpire'] = record.device.verificationExpire == null ? 0 : record.device.verificationExpire.getTime();\r\n    return recordDTO;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Device} from \"../model/device\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {Employee} from \"../model/employee\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllEmployees(): Observable<Employee[]> {\r\n    return this.http.get<Employee[]>('/api/v1/employees/')\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {environment} from \"../../environments/environment\";\r\nimport {map} from \"rxjs/operators\";\r\nimport {User} from \"../model/user\";\r\nimport {Authority} from \"../model/authority\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>('/api/v1/users/');\r\n  }\r\n\r\n  createUser(user: User): Observable<User> {\r\n    return this.http.post<User>('/api/v1/users/create',\r\n      user, {headers: {'Content-Type': 'application/json'}});\r\n  }\r\n\r\n  updateUser(user: User): Observable<User> {\r\n    return this.http.put('/api/v1/users/update',\r\n      user, {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(() => {\r\n        return user\r\n      }));\r\n  }\r\n\r\n  removeUser(user: User): Observable<User> {\r\n    return this.http.post('/api/v1/users/delete', user,\r\n      {headers: {'Content-Type': 'application/json'}})\r\n      .pipe(map(() => {\r\n        return user\r\n      }))\r\n  }\r\n\r\n  getAllAuthorities(): Observable<Authority[]> {\r\n    return this.http.get<Authority[]>('/api/v1/users/authorities');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-qr-add-device',\r\n  templateUrl: './qr-add-device.component.html',\r\n  styleUrls: ['./qr-add-device.component.css']\r\n})\r\nexport class QrAddDeviceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>qr-add-device works!</p>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogRef\r\n} from \"@angular/material/dialog\";\r\nimport {User} from \"../../../../model/user\";\r\nimport {Authority} from \"../../../../model/authority\";\r\nimport {Position} from \"../../../../model/position\";\r\nimport {passwordMatchValidator} from \"../user-add-form/user-add-form.component\";\r\nimport {UserService} from \"../../../../services/user.service\";\r\nimport {PositionService} from \"../../../../services/position.service\";\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\nimport {ErrorComponent} from \"../../../error/error.component\";\r\nimport {AuthService} from \"../../../../services/security/auth.service\";\r\nimport {ROLE_NAMES} from \"../../../app.component\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ConfirmDialogComponent} from \"../../../confirm-dialog/confirm-dialog.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-edit-form',\r\n  templateUrl: './user-edit-form.component.html',\r\n  styleUrls: ['./user-edit-form.component.css']\r\n})\r\nexport class UserEditFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  isPasswordFormVisible: boolean;\r\n  authorities: Authority[];\r\n  positions: Position[];\r\n  submitDisabled: boolean;\r\n  deleteDisabled: boolean;\r\n\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UserEditFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: User,\r\n    private userService: UserService,\r\n    private positionService: PositionService,\r\n    private auth: AuthService,\r\n    private dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({password: new FormControl('', Validators.minLength(6)),\r\n      passwordConfirmation: new FormControl(''),\r\n      authorities: new FormControl({value: this.data.authorities[0],\r\n        disabled: this.auth.getCurrentEmployee().id === this.data.employee.id}, Validators.required),\r\n      name: new FormControl(this.data.employee.name,\r\n        [Validators.required, Validators.minLength(3)]),\r\n      position: new FormControl(this.data.employee.position, Validators.required)\r\n      }, {validators: passwordMatchValidator})\r\n    console.log(JSON.stringify(this.data))\r\n    this.isPasswordFormVisible = false;\r\n    this.userService.getAllAuthorities().subscribe(authorities => {\r\n      this.authorities = authorities;\r\n    })\r\n    this.positionService.getAllPositions().subscribe(positions => {\r\n      this.positions = positions\r\n    })\r\n    this.submitDisabled = false;\r\n    this.deleteDisabled = false;\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close({status: 'canceled'});\r\n  }\r\n\r\n  updateUser() {\r\n    this.submitDisabled = true;\r\n    this.userService.updateUser(this.getUser()).subscribe(() => {\r\n      this.dialogRef.close({status: 'updated', user: this.getUser()})\r\n    }, error => {\r\n      this.errorHandler(error)\r\n      this.submitDisabled = false;\r\n    })\r\n  }\r\n\r\n  deleteUser() {\r\n    this.confirm(\"Удалить пользователя?\").subscribe(flag => {\r\n      if (flag) {\r\n        this.deleteDisabled = true;\r\n        this.userService.removeUser(this.getUser()).subscribe(() => {\r\n          this.dialogRef.close({status: 'removed', user: this.getUser()})\r\n        }, error => {\r\n          this.errorHandler(error)\r\n          this.deleteDisabled = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  confirm(message: String): Observable<boolean> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      data: message,\r\n      disableClose: true\r\n    }).afterClosed();\r\n  }\r\n\r\n\r\n\r\n  public getUser(): User {\r\n    this.form.controls['authorities'].setValue(this.form.controls['authorities'].value)\r\n    return {id: this.data.id, authorities: [this.form.controls['authorities'].value],\r\n      login: this.data.login,\r\n      password: this.form.controls['password'].value,\r\n      employee: {id: this.data.employee.id, name: this.form.controls['name'].value,\r\n        position: this.form.controls['position'].value}}\r\n  }\r\n\r\n  private errorHandler(error: HttpErrorResponse) {\r\n    switch (error.status) {\r\n      case 401: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Недостаточно прав\"}\r\n        });\r\n        break;\r\n      }\r\n      case 406: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Выбранный логин занят\"}\r\n        });\r\n        break;\r\n      }\r\n      default: {\r\n        this.dialog.open(ErrorComponent, {\r\n          width: '200px',\r\n          data: {message: \"Неизвестная ошибка\"}\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  getRoleName(name: string): string {\r\n    return ROLE_NAMES.get(name);\r\n  }\r\n\r\n\r\n  isSubmitDisabled() {\r\n    return this.form.invalid || this.submitDisabled;\r\n }\r\n  isDeleteDisabled() {\r\n    return this.auth.getCurrentEmployee().id === this.data.employee.id ||\r\n      this.deleteDisabled;\r\n  }\r\n\r\n  public objectComparisonFunction = function(option, value) : boolean {\r\n    return option.id == value.id\r\n  }\r\n\r\n  openChangePasswordForm() {\r\n    this.isPasswordFormVisible = !this.isPasswordFormVisible;\r\n  }\r\n}\r\n\r\n\r\n","<h1 mat-dialog-title style=\"text-align: center\">Редактировать пользователя</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"updateUser()\">\r\n  <div mat-dialog-content fxLayout=\"column\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around\" fxLayoutGap.xs=\"5%\" fxLayout.xs=\"column\">\r\n        <div style=\"margin-top: 15px\">\r\n          <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n            <mat-label>Ф.И.О.</mat-label>\r\n            <input matInput type=\"text\" autocomplete=\"off\" formControlName=\"name\" required/>\r\n            <mat-error *ngIf=\"form.controls.name.errors?.required\">Введите имя</mat-error>\r\n            <mat-error *ngIf=\"form.controls.name.errors?.minlength\">Не менее 3 символов</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-label>Должность</mat-label>\r\n          <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n            <mat-select formControlName=\"position\" [compareWith]=\"objectComparisonFunction\" required>\r\n              <mat-option *ngFor=\"let position of positions\" [value]=\"position\">\r\n                {{position.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"form.controls.position.invalid\">Выберите должность</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      <div fxFlex=\"30%\" fxFlexOrder.xs=\"2\">\r\n        <mat-label>Роль</mat-label>\r\n        <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n          <mat-select formControlName=\"authorities\" [compareWith]=\"objectComparisonFunction\" required>\r\n            <mat-option *ngFor=\"let authority of authorities\" [value]=\"authority\">\r\n              {{getRoleName(authority.role)}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"form.controls.authorities.invalid\">Выберите роль</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around\" fxLayoutGap.xs=\"5%\" fxLayout.xs=\"column\" *ngIf=\"isPasswordFormVisible\">\r\n      <div fxFlex=\"30%\">\r\n        <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n          <mat-label>Пароль</mat-label>\r\n          <input matInput type=\"password\" autocomplete=\"off\" formControlName=\"password\"/>\r\n          <mat-error *ngIf=\"form.controls.password.invalid\">Не менее 6 символов</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div fxFlex=\"30%\">\r\n        <mat-form-field floatLabel=\"auto\" appearance=\"outline\">\r\n          <mat-label>Повторите пароль</mat-label>\r\n          <input matInput type=\"password\" autocomplete=\"off\" formControlName=\"passwordConfirmation\"/>\r\n          <mat-error *ngIf=\"form.controls.passwordConfirmation.invalid\">Пароли не совпадают</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div mat-dialog-actions fxLayoutAlign=\"end\" style=\"margin-bottom: 10px\">\r\n      <button mat-button type=\"button\" (click)=\"deleteUser()\" color=\"warn\" [disabled]=\"isDeleteDisabled()\">Удалить</button>\r\n      <button mat-button type=\"button\" (click)=\"openChangePasswordForm()\">Сменить пароль</button>\r\n      <button mat-button type=\"button\" (click)=\"onNoClick()\">Отмена</button>\r\n      <button mat-button type=\"submit\" [disabled]=\"isSubmitDisabled()\">Ok</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot\r\n} from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport decode from 'jwt-decode';\r\n\r\n@Injectable()\r\nexport class RoleGuardService implements CanActivate {\r\n\r\n\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const expectedRole = route.data.expectedRole;\r\n    const token = localStorage.getItem('jwt');\r\n    const tokenPayload = decode<JWTPayload>(token);\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    } else if (tokenPayload.roles[0] !== expectedRole) {\r\n      this.router.navigate(['home']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport interface JWTPayload {\r\n  sub: String;\r\n  roles: String[];\r\n}\r\n","import {AfterViewChecked, Component, Input, OnChanges, OnInit} from '@angular/core';\r\nimport {Device} from \"../../../../model/device\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-device-qr-table',\r\n  templateUrl: './device-qr-table.component.html',\r\n  styleUrls: ['./device-qr-table.component.css']\r\n})\r\nexport class DeviceQrTableComponent implements OnInit {\r\n\r\n  @Input()\r\n  devices: Device[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n\r\n  generatePDF() {\r\n    let doc = new jsPDF();\r\n    autoTable(doc, {\r\n      html: '#qr-table',\r\n      bodyStyles: {minCellHeight: 17},\r\n      didDrawCell: function(data) {\r\n        if (data.column.index === 3 && data.cell.section === 'body') {\r\n          let td: any = data.cell.raw;\r\n          console.log(td)\r\n          let qr: any = td.getElementsByTagName('qr-code')[0];\r\n          console.log(qr)\r\n          let img: any = qr.getElementsByTagName('img')[0];\r\n          console.log(img)\r\n          let dim: any = data.cell.height - data.cell.padding('vertical');\r\n          console.log(dim)\r\n          let textPos = data.cell.getTextPos()\r\n          doc.addImage(img.src, textPos.x,  textPos.y, dim, dim);\r\n        }\r\n      }\r\n    });\r\n    doc.save('device-table.pdf')\r\n  }\r\n\r\n\r\n\r\n\r\n  transliterate(word){\r\n    let a = {\"Ё\":\"YO\",\"Й\":\"I\",\"Ц\":\"TS\",\"У\":\"U\",\"К\":\"K\",\"Е\":\"E\",\"Н\":\"N\",\"Г\":\"G\",\"Ш\":\"SH\",\"Щ\":\"SCH\",\"З\":\"Z\",\"Х\":\"H\",\"Ъ\":\"'\",\"ё\":\"yo\",\"й\":\"i\",\"ц\":\"ts\",\"у\":\"u\",\"к\":\"k\",\"е\":\"e\",\"н\":\"n\",\"г\":\"g\",\"ш\":\"sh\",\"щ\":\"sch\",\"з\":\"z\",\"х\":\"h\",\"ъ\":\"'\",\"Ф\":\"F\",\"Ы\":\"I\",\"В\":\"V\",\"А\":\"a\",\"П\":\"P\",\"Р\":\"R\",\"О\":\"O\",\"Л\":\"L\",\"Д\":\"D\",\"Ж\":\"ZH\",\"Э\":\"E\",\"ф\":\"f\",\"ы\":\"i\",\"в\":\"v\",\"а\":\"a\",\"п\":\"p\",\"р\":\"r\",\"о\":\"o\",\"л\":\"l\",\"д\":\"d\",\"ж\":\"zh\",\"э\":\"e\",\"Я\":\"Ya\",\"Ч\":\"CH\",\"С\":\"S\",\"М\":\"M\",\"И\":\"I\",\"Т\":\"T\",\"Ь\":\"'\",\"Б\":\"B\",\"Ю\":\"YU\",\"я\":\"ya\",\"ч\":\"ch\",\"с\":\"s\",\"м\":\"m\",\"и\":\"i\",\"т\":\"t\",\"ь\":\"'\",\"б\":\"b\",\"ю\":\"yu\"};\r\n    return word.split('').map(function (char) {\r\n      return a[char] || char;\r\n    }).join(\"\");\r\n  }\r\n}\r\n","<div style=\"width: 1000px\">\r\n  <h2>Средства измерений</h2>\r\n  <table class=\"table\" id=\"qr-table\">\r\n    <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>Title</th>\r\n      <th>Serial number</th>\r\n      <th>QR-code</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let device of devices; let index = index\">\r\n      <td>{{index + 1}}</td>\r\n      <td>{{transliterate(device.name)}}</td>\r\n      <td>{{device.serialNumber}}</td>\r\n      <td><qr-code [value]=\"device.id.toString()\"></qr-code></td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Device} from \"../../model/device\";\r\nimport {MatTable, MatTableDataSource} from \"@angular/material/table\";\r\nimport {DeviceService} from \"../../services/device.service\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {ErrorComponent} from \"../error/error.component\";\r\nimport {Observable, Subject} from \"rxjs\";\r\nimport {RegisterDeviceService} from \"../../services/register-device.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\nimport {ConfirmDialogComponent} from \"../confirm-dialog/confirm-dialog.component\";\r\n\r\n@Component({\r\n  selector: 'app-register-device',\r\n  templateUrl: './register-device.component.html',\r\n  styleUrls: ['./register-device.component.css']\r\n})\r\nexport class RegisterDeviceComponent implements OnInit {\r\n\r\n  @ViewChild(MatTable) table: MatTable<any>;\r\n  devices: Device[];\r\n  subject: Subject<Device[]>\r\n  registerDevices: Device[];\r\n  displayedColumns: string[] = ['id', 'name', 'serialNumber', 'deleteAction'];\r\n  dataSource = new MatTableDataSource();\r\n  scannedEnabled: boolean;\r\n\r\n  constructor(private deviceService: DeviceService,\r\n              private registerService: RegisterDeviceService,\r\n              private dialog: MatDialog,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.subject = new Subject<Device[]>()\r\n    this.deviceService.getAllDevices().subscribe(devices => {\r\n      this.devices = devices;\r\n      this.subject.next(this.getValidDevices())\r\n    })\r\n    this.registerDevices = [];\r\n    this.dataSource.data = this.registerDevices\r\n    this.scannedEnabled = false;\r\n  }\r\n\r\n    switchScanner() {\r\n    this.scannedEnabled = !this.scannedEnabled\r\n  }\r\n\r\n  scanSuccessHandler(result: string) {\r\n    let id : number = Number.parseInt(result);\r\n    let device: Device = this.devices.find(x => x.id === id)\r\n    console.log(device.name);\r\n    this.addDevice(device);\r\n    this.switchScanner();\r\n    this.table.renderRows();\r\n  }\r\n\r\n  addDevice(device: Device) {\r\n    if (!this.deviceIsNotExpired(device)) {\r\n      this.dialog.open(ErrorComponent, {\r\n        data: {message: `Срок поверки прибора ${device.name} № ${device.serialNumber} истёк`}\r\n      })\r\n    } else if (device.taken) {\r\n      this.dialog.open(ErrorComponent, {\r\n        data: {message: `Прибор ${device.name} № ${device.serialNumber} уже используется`}\r\n      })\r\n    } else if (this.registerDevices.includes(device)) {\r\n      this.dialog.open(ErrorComponent, {\r\n        data: {message: `Прибор ${device.name} № ${device.serialNumber} уже выбран`}\r\n      })\r\n    } else {\r\n      this.registerDevices.push(device);\r\n      this.dataSource.data = this.registerDevices;\r\n    }\r\n  }\r\n\r\n  addDevices(devices: Device[]) {\r\n    devices.forEach(x => this.addDevice(x));\r\n    this.table.renderRows();\r\n  }\r\n\r\n  removeDevice(device: Device) {\r\n    let index = this.registerDevices.indexOf(device);\r\n    if (index > -1) {\r\n      this.registerDevices.splice(index, 1)\r\n    }\r\n    this.table.renderRows();\r\n  }\r\n\r\n  getValidDevices(): Device[] {\r\n    return this.devices.filter(device => {\r\n      return !device.taken && this.deviceIsNotExpired(device)\r\n    })\r\n  }\r\n\r\n  deviceIsNotExpired(device: Device): boolean {\r\n    return device.verificationExpire.getTime() - Date.now() > 0\r\n  }\r\n\r\n  register() {\r\n    this.confirm(\"Зарегистрировать выбранные приборы?\").subscribe(flag => {\r\n      if (flag) {\r\n        this.registerService.registerDevices(this.registerDevices).subscribe(() => {\r\n          this.router.navigate(['home'])\r\n        }, error => {\r\n          this.errorHandler(error)\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    this.dialog.open(ErrorComponent, {\r\n      data: {message: 'Неизвестная ошибка'}\r\n    })\r\n  }\r\n\r\n  confirm(message: String): Observable<boolean> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      data: message,\r\n      disableClose: true\r\n    }).afterClosed();\r\n  }\r\n}\r\n","<mat-card class=\"container\">\r\n   <mat-card-title style=\"text-align: center; margin-bottom: 1rem\">Приборы</mat-card-title>\r\n    <mat-card-content>\r\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"id\">\r\n          <th mat-header-cell *matHeaderCellDef> № </th>\r\n          <td mat-cell *matCellDef=\"let device; let index = index\">\r\n            {{index + 1}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef> Название </th>\r\n          <td mat-cell *matCellDef=\"let device\"> {{device.name}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"serialNumber\">\r\n          <th mat-header-cell *matHeaderCellDef> Серийный номер </th>\r\n          <td mat-cell *matCellDef=\"let device\">\r\n            {{device.serialNumber}}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"deleteAction\">\r\n          <th mat-header-cell *matHeaderCellDef></th>\r\n          <td mat-cell *matCellDef=\"let device\">\r\n            <button mat-mini-fab color=\"primary\" style=\"float: right\" (click)=\"removeDevice(device)\">\r\n              <mat-icon>remove</mat-icon>\r\n            </button></td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-flat-button color=\"primary\" [disabled]=\"registerDevices.length === 0\" (click)=\"register()\">Зарегистрировать</button>\r\n    </mat-card-actions>\r\n</mat-card>\r\n<mat-card class=\"container\" style=\"padding-bottom: 20px\">\r\n  <zxing-scanner [enable]=\"scannedEnabled\" [class.hidden]=\"!scannedEnabled\" (scanSuccess) = \"scanSuccessHandler($event)\" ></zxing-scanner>\r\n  <div><button mat-flat-button color=\"primary\" class=\"button\" (click)=\"switchScanner()\">{{scannedEnabled ? 'Выключить QR-сканер' : 'Сканировать QR-код'}}</button></div>\r\n</mat-card>\r\n<mat-card class=\"container\">\r\n  <app-selector-add-device [subject]=\"subject\" (deviceEvent)=\"addDevices($event)\"></app-selector-add-device>\r\n\r\n</mat-card>\r\n\r\n\r\n\r\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Record} from \"../../model/record\";\r\nimport {Employee} from \"../../model/employee\";\r\nimport {Device} from \"../../model/device\";\r\nimport {MatPaginator} from \"@angular/material/paginator\";\r\nimport {MatTable, MatTableDataSource} from \"@angular/material/table\";\r\nimport {MatSort} from \"@angular/material/sort\";\r\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {RecordFormComponent} from \"./record-form/record-form.component\";\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {AuthService} from \"../../services/security/auth.service\";\r\nimport {RecordService} from \"../../services/record.service\";\r\nimport {RegisterDeviceService} from \"../../services/register-device.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ConfirmDialogComponent} from \"../confirm-dialog/confirm-dialog.component\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-journal',\r\n  templateUrl: './journal.component.html',\r\n  styleUrls: ['./journal.component.css']\r\n})\r\n\r\nexport class JournalComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(MatTable) table: MatTable<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  form: FormGroup;\r\n  employees: Employee[] = [];\r\n  devices: Device[] = [];\r\n  records: Record[];\r\n  displayedColumns: string[] = ['taken', 'employee', 'deviceName', 'serialNumber', 'returned'];\r\n  dataSource = new MatTableDataSource<Record>();\r\n  filteredEmployees: Employee[];\r\n  filteredDevices: Device[];\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sortingDataAccessor = (record, property) => {\r\n      switch(property) {\r\n        case 'deviceName': return record.device.name\r\n        case 'serialNumber': return record.device.serialNumber;\r\n        case 'employee': return record.employee.name;\r\n        default: return record[property];\r\n      }\r\n    };\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n\r\n\r\n  constructor(public dialog: MatDialog,\r\n              public authService: AuthService,\r\n              private recordService: RecordService,\r\n              private registerDeviceService: RegisterDeviceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm()\r\n    this.recordService.getAllRecords().subscribe(records => {\r\n      this.records = records\r\n      this.dataSource.data = this.records;\r\n    });\r\n    this.setEmployeesAndDevices();\r\n\r\n  }\r\n  openDialog(record: Record): MatDialogRef<RecordFormComponent> {\r\n    console.log(record)\r\n      return this.dialog.open(RecordFormComponent, {\r\n      width: '1000px',\r\n      data: record,\r\n      disableClose: true\r\n    });\r\n  }\r\n\r\n  createRecord() {\r\n    this.openDialog(null).afterClosed().subscribe(data => {\r\n      switch (data.status) {\r\n        case 'created': {\r\n          this.records.push(data.record)\r\n          this.dataSource.data = this.records;\r\n          this.table.renderRows();\r\n          break;\r\n        }\r\n        case 'canceled': {\r\n          break;\r\n        }\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  updateRecord(record: Record) {\r\n    console.log(record)\r\n    this.openDialog(record).afterClosed().subscribe(data => {\r\n      let index = this.records.findIndex(x => x.id === record.id)\r\n      switch (data.status) {\r\n        case 'update': {\r\n          this.records[index] = data.record;\r\n          break;\r\n        }\r\n        case 'remove': {\r\n          this.records.splice(index, 1)\r\n          break;\r\n        }\r\n        case 'canceled': {\r\n          break;\r\n        }\r\n      }\r\n      this.dataSource.data = this.records\r\n      this.table.renderRows();\r\n    })\r\n  }\r\n\r\n\r\n  submit() {\r\n    console.log(this.getRequest())\r\n    this.recordService.getRecordsByRequest(this.getRequest()).subscribe( records => {\r\n      console.log(records)\r\n      this.records = records;\r\n      this.dataSource.data = records;\r\n      this.table.renderRows();\r\n    })\r\n  }\r\n\r\n  closeRecord(record: Record) {\r\n    this.confirm(\"Закрыть выбранную запись?\").subscribe(flag => {\r\n      if (flag) {\r\n        this.registerDeviceService.closeRecord(record).subscribe(returnedRecord => {\r\n          let index = this.records.indexOf(record)\r\n          this.records[index].returned = returnedRecord.returned\r\n          this.dataSource.data = this.records;\r\n          this.table.renderRows();\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.initForm()\r\n    this.submit();\r\n  }\r\n\r\n  initForm() {\r\n    this.form = new FormGroup({\r\n      startDate: new FormControl(),\r\n      endDate: new FormControl(),\r\n      employee: new FormControl(),\r\n      device: new FormControl()\r\n    })\r\n  }\r\n  getRequest(): Object {\r\n    let request = this.form.value;\r\n    request.startDate = request.startDate == null || request.startDate == 0 ? 0 : new Date(request.startDate).getTime()\r\n    request.endDate = request.endDate == null || request.endDate == 0 ? 0 : new Date(request.endDate).getTime()\r\n    return request;\r\n  }\r\n\r\n\r\n\r\n  setEmployeesAndDevices() {\r\n    this.recordService.getEmployeesAndDevices().subscribe(obj => {\r\n      this.employees = <Employee[]>obj['employees'];\r\n      this.filteredEmployees = this.employees;\r\n      this.devices = <Device[]>obj['devices']\r\n      this.filteredDevices = this.devices;\r\n    })\r\n  }\r\n\r\n  confirm(message: String): Observable<boolean> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      data: message,\r\n      disableClose: true\r\n    }).afterClosed();\r\n  }\r\n\r\n}\r\n","<h2>Журнал</h2>\r\n\r\n<div class=\"mat-elevation-z8 container\" fxLayout=\"column\" style=\"width: 100%\">\r\n  <form fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutGap=\"5%\" fxLayoutAlign=\"center\" style=\"padding-bottom: 1rem;\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <div fxLayoutAlign=\"start\" fxFlex=\"20%\">\r\n      <mat-form-field appearance=\"fill\" class=\"example-form-field\" style=\"width: 100%\">\r\n        <mat-label>Дата регистрации</mat-label>\r\n        <mat-date-range-input [rangePicker]=\"rangePicker\">\r\n          <input matStartDate placeholder=\"с\" formControlName=\"startDate\">\r\n          <input matEndDate placeholder=\"по\" formControlName=\"endDate\">\r\n        </mat-date-range-input>\r\n        <mat-datepicker-toggle matSuffix [for]=\"rangePicker\"></mat-datepicker-toggle>\r\n        <mat-date-range-picker #rangePicker>\r\n          <mat-date-range-picker-actions>\r\n            <button mat-button matDateRangePickerCancel>Отмена</button>\r\n            <button mat-raised-button color=\"primary\" matDateRangePickerApply>Применить</button>\r\n          </mat-date-range-picker-actions>\r\n        </mat-date-range-picker>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"20%\">\r\n      <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n        <mat-label>Сотрудник</mat-label>\r\n        <mat-select formControlName=\"employee\">\r\n          <mat-select-filter [placeholder]=\"'Поиск..'\"\r\n                             [noResultsMessage] = \"'Нет результатов'\"\r\n                             [array]=\"employees\"\r\n                             [displayMember]=\"'name'\"\r\n                             (filteredReturn)=\"filteredEmployees = $event\">\r\n          </mat-select-filter>\r\n          <mat-option *ngFor=\"let employee of filteredEmployees\" [value]=\"employee\">\r\n            {{employee.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxFlex=\"20%\">\r\n      <mat-form-field appearance=\"fill\" style=\"width: 100%\">\r\n        <mat-label>Прибор</mat-label>\r\n        <mat-select formControlName=\"device\">\r\n          <mat-select-filter [placeholder]=\"'Поиск..'\"\r\n                             [noResultsMessage] = \"'Нет результатов'\"\r\n                             [array]=\"devices\"\r\n                             [displayMember]=\"'name'\"\r\n                             (filteredReturn)=\"filteredDevices = $event\">\r\n          </mat-select-filter>\r\n          <mat-option *ngFor=\"let device of filteredDevices\" [value]=\"device\">\r\n            {{device.name}} {{device.serialNumber}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayoutAlign=\"end center\" fxFlex=\"30%\" fxLayoutGap=\"5px\" style=\"padding-bottom: 1rem\"><button mat-raised-button color=\"primary\" style=\"float: right; width: 100%\" type=\"submit\">Применить</button>\r\n      <button mat-raised-button color=\"primary\" style=\"float: right; width: 100%\" type=\"button\" (click)=\"resetForm()\">Сбросить</button></div>\r\n\r\n\r\n  </form>\r\n  <div style=\"overflow-x: auto\">\r\n    <table mat-table [dataSource]=\"dataSource\" style=\"width: 100%\" matSort matSortActive=\"taken\" matSortDirection=\"desc\" matSortDisableClear>\r\n      <ng-container matColumnDef=\"taken\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header><span style=\"margin-left: 20px\">Дата регистрации</span></th>\r\n        <td mat-cell *matCellDef=\"let record\"><button mat-mini-fab style=\"margin-right: 1rem\" (click)=\"updateRecord(record)\" *ngIf=\"authService.isAdmin()\" [disabled]=\"record.returned === null\"><mat-icon>edit</mat-icon></button> {{record.taken | date: 'dd.MM.YY/HH:mm' }} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"employee\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Сотрудник </th>\r\n        <td mat-cell *matCellDef=\"let record\"> {{record.employee.name}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"deviceName\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Название прибора</th>\r\n        <td mat-cell *matCellDef=\"let record\"> {{record.device.name}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"serialNumber\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Серийный номер</th>\r\n        <td mat-cell *matCellDef=\"let record\"> {{record.device.serialNumber}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"returned\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Возвращено</th>\r\n        <td mat-cell *matCellDef=\"let record\">\r\n          <button mat-raised-button color=\"primary\" *ngIf=\"record.returned === null && authService.isAdmin()\" (click)=\"closeRecord(record)\">Закрыть</button>\r\n          {{record.returned != null ? (record.returned | date: 'dd.MM.YY/HH:mm') : \"\"}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <div style=\"text-align: center\"><button mat-mini-fab style=\"margin-top: 20px\" color=\"primary\" (click)=\"createRecord()\" *ngIf=\"authService.isAdmin()\"><mat-icon>add</mat-icon></button></div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\r\n                   showFirstLastButtons\r\n                   aria-label=\"Select page of periodic elements\">\r\n    </mat-paginator>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/components/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\r\nimport {User} from \"../../model/user\";\r\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\r\nimport {catchError, map, tap} from \"rxjs/operators\";\r\nimport {Observable, Subject, throwError} from \"rxjs\";\r\nimport {Employee} from \"../../model/employee\";\r\nimport decode from \"jwt-decode\";\r\nimport {JWTPayload} from \"./role-guard.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {environment} from \"../../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  eventStream: Subject<Employee> = new Subject();\r\n  errorStream: Subject<String> = new Subject();\r\n\r\n  constructor(private http: HttpClient,\r\n              private jwtHelper: JwtHelperService,\r\n              private router: Router) { }\r\n\r\n  authorize(user: User) {\r\n    localStorage.removeItem('jwt');\r\n    localStorage.removeItem('employee');\r\n    this.http.post('/api/v1/users/login', JSON.stringify(user),\r\n      {headers: {'Content-Type': 'application/json'}, withCredentials: true, observe: \"response\"})\r\n      .subscribe(response => {\r\n        localStorage.setItem(\"jwt\", response.headers.get(\"Authorization\").split(\" \")[1])\r\n        console.log('jwt added to local storage')\r\n        let employee = JSON.parse(JSON.stringify(response.body));\r\n        console.log('employee created')\r\n        this.eventStream.next(employee)\r\n        console.log('employee emitted tot toolbar')\r\n        localStorage.setItem('employee', JSON.stringify(employee))\r\n        console.log('jwt added to local storage')\r\n        this.router.navigate(['home'])\r\n      }, error => {\r\n        console.log(error)\r\n        this.errorStream.next(this.getErrorMessage(error));\r\n      })\r\n  }\r\n  public isAuthenticated(): boolean {\r\n    const token = localStorage.getItem('jwt');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n  public isAdmin(): boolean {\r\n    const token = localStorage.getItem('jwt');\r\n    const tokenPayload = decode<JWTPayload>(token);\r\n    return tokenPayload.roles[0] === 'ROLE_ADMIN'\r\n  }\r\n\r\n  private getErrorMessage(error: HttpErrorResponse): String {\r\n    switch (error.status) {\r\n      case 404: {\r\n        return \"Пользователь не найден\"\r\n      }\r\n      default: {\r\n        return \"Неизвестная ошибка\"\r\n      }\r\n    }\r\n  }\r\n  public getToken(): string {\r\n    return localStorage.getItem('jwt');\r\n  }\r\n\r\n  public getCurrentEmployee(): Employee {\r\n    return JSON.parse(localStorage.getItem('employee'))\r\n  }\r\n\r\n  public logout() {\r\n    localStorage.removeItem('jwt');\r\n    localStorage.removeItem('employee')\r\n    this.router.navigate(['login'])\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}